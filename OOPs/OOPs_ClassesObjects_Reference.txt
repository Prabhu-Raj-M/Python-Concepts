https://www.geeksforgeeks.org/python-oops-concepts/

Some points on Python class:  

    Classes are created by keyword class.
    Attributes are the variables that belong to a class.
    Attributes are always public and can be accessed using the dot (.) operator. Eg.: Myclass.Myattribute

The object is an entity that has a state and behavior associated with it. It may be any real-world object like a mouse, keyboard, chair, table, pen, etc. Integers, strings, floating-point numbers, even arrays, and dictionaries, are all objects. More specifically, any single integer or any single string is an object. The number 12 is an object, the string “Hello, world” is an object, a list is an object that can hold other objects, and so on. You’ve been using objects all along and may not even realize it.
An object consists of:

    State: It is represented by the attributes of an object. It also reflects the properties of an object.
    Behavior: It is represented by the methods of an object. It also reflects the response of an object to other objects.
    Identity: It gives a unique name to an object and enables one object to interact with other objects.

The Python self  

    Class methods must have an extra first parameter in the method definition. We do not give a value for this parameter when we call the method, Python provides it.
    If we have a method that takes no arguments, then we still have to have one argument.
    This is similar to this pointer in C++ and this reference in Java.

When we call a method of this object as myobject.method(arg1, arg2), this is automatically converted by Python into MyClass.method(myobject, arg1, arg2) – this is all the special self is about.

Note: For more information, refer to https://www.geeksforgeeks.org/self-in-python-class/

The Python __init__ Method 

    The __init__ method is similar to constructors in C++ and Java. 
    It is run as soon as an object of a class is instantiated. 
    The method is useful to do any initialization you want to do with your object. 
    Now let us define a class and create some objects using the self and __init__ method.
